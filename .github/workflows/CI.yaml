name: Build Docker Images Based on Folder Changes

on:
  push:
    paths:
      - 'apps/account/**'
      - 'apps/admin/**'
      - 'apps/messenger/**'
      - 'apps/external-messenger/**'
      - 'libs/**'   # Add this line to track changes in the /libs folder
 
jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      account-changed: ${{ steps.detect.outputs.account-changed }}
      admin-changed: ${{ steps.detect.outputs.admin-changed }}
      messenger-changed: ${{ steps.detect.outputs.messenger-changed }}
      external-messenger-changed: ${{ steps.detect.outputs.external-messenger-changed }}
      libs-changed: ${{ steps.detect.outputs.libs-changed }}  # New output for /libs
 
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
 
    - name: Detect changes in folders
      id: detect
      run: |
        # Fetch the previous commit
        git fetch --depth=2
        previous_commit=$(git rev-parse HEAD^1)
        current_commit=$(git rev-parse HEAD)
 
        # Initialize output variables
        account_changed="false"
        admin_changed="false"
        messenger_changed="false"
        external-messenger_changed="false"
        libs_changed="false"  # Initialize the /libs output variable
 
        # Get list of changed files
        changed_files=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }})
 
        # Print changed files for debugging
        echo "Changed files:"
        echo "$changed_files"
 
        # Check changes for each folder
        if echo "$changed_files" | grep -q '^apps/account/'; then
          account_changed="true"
        fi
        if echo "$changed_files" | grep -q '^apps/admin/'; then
          admin_changed="true"
        fi
        if echo "$changed_files" | grep -q '^apps/external-messenger/'; then
          messenger_changed="true"
        fi
        if echo "$changed_files" | grep -q '^apps/messenger/'; then
          external-messenger_changed="true"
        fi
        if echo "$changed_files" | grep -q '^libs/'; then
          libs_changed="true"
        fi
 
        # Output the results
        echo "account-changed=$account_changed" >> $GITHUB_ENV
        echo "admin-changed=$admin_changed" >> $GITHUB_ENV
        echo "messenger-changed=$messenger_changed" >> $GITHUB_ENV
        echo "external-messenger-changed=$external-messenger_changed" >> $GITHUB_ENV
        echo "libs-changed=$libs_changed" >> $GITHUB_ENV  # Output for /libs
 
  account:
    needs: detect-changes
    runs-on: ubuntu-latest
    if: ${{ needs.detect-changes.outputs.account-changed == 'true' || needs.detect-changes.outputs.libs-changed == 'true' }}
 
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
 
    - name: Print Hello
      run: echo "Hello from account"
 
  admin:
    needs: detect-changes
    runs-on: ubuntu-latest
    if: ${{ needs.detect-changes.outputs.admin-changed == 'true' || needs.detect-changes.outputs.libs-changed == 'true' }}
 
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
 
    - name: Print Hello
      run: echo "Hello from admin"
 
  external-messenger:
    needs: detect-changes
    runs-on: ubuntu-latest
    if: ${{ needs.detect-changes.outputs.messenger-changed == 'true' || needs.detect-changes.outputs.libs-changed == 'true' }}
 
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
 
    - name: Print Hello
      run: echo "Hello from external-messenger"
 
  messenger:
    needs: detect-changes
    runs-on: ubuntu-latest
    if: ${{ needs.detect-changes.outputs.external-messenger-changed == 'true' || needs.detect-changes.outputs.libs-changed == 'true' }}
 
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
 
    - name: Print Hello
      run: echo "Hello from messenger"
